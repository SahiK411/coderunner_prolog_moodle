<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 131  -->
  <question type="coderunner">
    <name>
      <text>Derivadas</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Un grupo de ingenieros ha tomado interes en el desarrollo de modelos matematicos utilizando prolog. Debido a la importancia de las funciones derivadas para la matematica, han decidido buscar tu apoyo para desarrollar una base de conocimientos capaz de resolver derivadas polinomiales. Para lograr esto, ellos esperan lo siguiente:</p>
<ul>
<li>Reglas de aridad 3 "d(x, A, C)" que retornen la derivada de una constante, variable 'x', variable 'x' multiplicando una constante, o una variable 'x' elevada a algun valor</li>
<li>Reglas de aridad 3 "d(x, A, C)" que retornen la derivada de la suma o resta de 2 o mas funciones que trabajen con una variable 'x'</li>
</ul>
<p>Debido a las peculiaridades de su sistema, es necesario manejar la funcion resultante como un atomo en operaciones futuras. Esto se puede lograr de la siguiente manera:</p>
<ul>
<li>term_to_atom(B, C), donde B es la funcion derivada resultante de toda la expresion original</li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <coderunnertype>prolog_determinant_knowledge_base</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>10, 20, ...</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload></answerpreload>
    <globalextra></globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <extractcodefromjson>1</extractcodefromjson>
    <templateparamslang>None</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald>{}</templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>1</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>d(x, 2*x^2+4*x, R)</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>{'truth': True, 'R': '4*x^1+4'}</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>d(x, 5*x^3-3*x+1, R)</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>{'truth': True, 'R': '15*x^2-3+0'}</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>d(x, 7, R)</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>{'truth': True, 'R': '0'}</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
    </testcases>
  </question>

</quiz>